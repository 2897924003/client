import{ref as p,resolveComponent as m,mergeProps as i,useSSRContext as u}from"vue";import{ssrRenderAttrs as c,ssrRenderComponent as b}from"vue/server-renderer";import{_ as f}from"../server-entry.js";import"quasar";import"quasar/wrappers/index.mjs";import"pinia";import"vue-router";import"axios";const y=[{label:"Node 1",children:[{label:"Node 1.1",lazy:!0},{label:"Node 1.2",lazy:!0}]},{label:"Node 2",lazy:!0},{label:"Lazy load empty",lazy:!0},{label:"Node is not expandable",expandable:!1,children:[{label:"Some node"}]}],o={setup(){return{lazy:p(y),onLazyLoad({node:t,key:e,done:a,fail:r}){setTimeout(()=>{if(e.indexOf("Lazy load empty")>-1){a([]);return}const l=t.label;a([{label:`${l}.1`},{label:`${l}.2`,lazy:!0},{label:`${l}.3`,children:[{label:`${l}.3.1`,lazy:!0},{label:`${l}.3.2`,lazy:!0}]}])},1e3)}}}};function z(t,e,a,r,l,n,_,g){const d=m("q-tree");e(`<div${c(i({class:"q-pa-md q-gutter-sm"},r))}>`),e(b(d,{nodes:n.lazy,"default-expand-all":"","node-key":"label",onLazyLoad:n.onLazyLoad},null,a)),e("</div>")}const s=o.setup;o.setup=(t,e)=>{const a=u();return(a.modules||(a.modules=new Set)).add("src/pages/TargetPage.vue"),s?s(t,e):void 0};const P=f(o,[["ssrRender",z],["__file","TargetPage.vue"]]);export{P as default};
